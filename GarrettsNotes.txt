NOTES AND CODE FROM PREVIOUS VIDEOS I DON'T WANT TO LOSE:

Video 1-5 Member Variables:
	int vx = 0;
	int vy = 0;
	int gb = 255;
	bool shapeIsChanged = false;
	bool inhibitUp = false;
	bool inhibitDown = false;
	bool inhibitLeft = false;
	bool inhibitRight = false;

	//{
//	if (wnd.kbd.KeyIsPressed(VK_RIGHT)) //If a variable is redeclared within a function, the one in the function takes precident.
//	{
//		if (inhibitRight)
//		{
//		}
//		else
//		{
//			x_mobile = x_mobile + 1;
//			inhibitRight = true;
//		}
//	}
//	else
//	{
//		inhibitRight = false;
//	}
//
//	if (wnd.kbd.KeyIsPressed(VK_LEFT))
//	{
//		if (inhibitLeft)
//		{
//		}
//		else
//		{
//			x_mobile = x_mobile - 1;
//			inhibitLeft = true;
//		}
//	}
//	else
//	{
//		inhibitLeft = false;
//	}
//
//
//	if (wnd.kbd.KeyIsPressed(VK_UP))
//	{
//		if (inhibitUp)
//		{
//		}
//		else
//		{
//			y_mobile = y_mobile - 1;
//			inhibitUp = true;
//		}
//	}
//	else
//	{
//		inhibitUp = false;
//	}
//
//	if (wnd.kbd.KeyIsPressed(VK_DOWN))
//	{
//		if (inhibitDown)
//		{
//		}
//		else
//		{
//			y_mobile = y_mobile + 1;
//			inhibitDown = true;
//		}
//	}
//	else
//	{
//		inhibitDown = false;
//	}
//
//	x = x + vx;
//	y = y + vy;
//
//	if (x + 5 >= gfx.ScreenWidth)
//	{
//		x = gfx.ScreenWidth - 6;
//		vx = 0;
//	}
//
//	if (x - 5 < 0)
//	{
//		x = 5;
//		vx = 0;
//	}
//
//	if (y + 5 >= gfx.ScreenHeight)
//	{
//		y = gfx.ScreenHeight - 6;
//		vy = 0;
//	}
//
//	if (y - 5 < 0)
//	{
//		y = 5;
//		vy = 0;
//	}
//
//	shapeIsChanged = false;
//	if (x > 200 || x < 300)
//	{
//		shapeIsChanged = true;
//	}
//
//	if (wnd.kbd.KeyIsPressed(VK_CONTROL))
//	{
//		gb = 0; //Green and Blue Values.
//	}
//
//	//shapeIsChanged = wnd.kbd.KeyIsPressed(VK_SHIFT);
//
//}

//if (shapeIsChanged) //Changes Shape of Crosshair
//{
//	gfx.PutPixel(-10 + x, y,255, gb, gb); //(X,Y,R,G,B)
//	gfx.PutPixel(-9 + x, y, 255, gb, gb);
//	gfx.PutPixel(-8 + x, y, 255, gb, gb);
//	gfx.PutPixel(8 + x, y,  255, gb, gb);
//	gfx.PutPixel(9 + x, y,  255, gb, gb);
//	gfx.PutPixel(10 + x, y, 255, gb, gb);
//	gfx.PutPixel(x,-10 + y, 255, gb, gb);
//	gfx.PutPixel(x, -9 + y, 255, gb, gb);
//	gfx.PutPixel(x, -8 + y, 255, gb, gb);
//	gfx.PutPixel(x, 8 + y,  255, gb, gb);
//	gfx.PutPixel(x, 9 + y,  255, gb, gb);
//	gfx.PutPixel(x, 10 + y, 255, gb, gb);
//}
//else
//{
//	gfx.PutPixel(-5 + x, y, 255, gb, gb); //(X,Y,R,G,B)
//	gfx.PutPixel(-4 + x, y, 255, gb, gb);
//	gfx.PutPixel(-3 + x, y, 255, gb, gb);
//	gfx.PutPixel(3 + x, y, 255, gb, gb);
//	gfx.PutPixel(4 + x, y, 255, gb, gb);
//	gfx.PutPixel(5 + x, y, 255, gb, gb);
//	gfx.PutPixel(x, -5 + y, 255, gb, gb);
//	gfx.PutPixel(x, -4 + y, 255, gb, gb);
//	gfx.PutPixel(x, -3 + y, 255, gb, gb);
//	gfx.PutPixel(x, 3 + y, 255, gb, gb);
//	gfx.PutPixel(x, 4 + y, 255, gb, gb);
//	gfx.PutPixel(x, 5 + y, 255, gb, gb);
//}

//gfx.PutPixel(-10 + x, y, 255, gb, gb); //(X,Y,R,G,B)
//gfx.PutPixel(-9 + x, y, 255, gb, gb);
//gfx.PutPixel(-8 + x, y, 255, gb, gb);
//gfx.PutPixel(8 + x, y, 255, gb, gb);
//gfx.PutPixel(9 + x, y, 255, gb, gb);
//gfx.PutPixel(10 + x, y, 255, gb, gb);
//gfx.PutPixel(x, -10 + y, 255, gb, gb);
//gfx.PutPixel(x, -9 + y, 255, gb, gb);
//gfx.PutPixel(x, -8 + y, 255, gb, gb);
//gfx.PutPixel(x, 8 + y, 255, gb, gb);
//gfx.PutPixel(x, 9 + y, 255, gb, gb);
//gfx.PutPixel(x, 10 + y, 255, gb, gb);
